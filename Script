-- Roblox Lua Script for "The Intruder - Mall" Map (By BMF)
-- Script handles a draggable UI with multiple functionalities

-- Variables
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")


-- Create UI Elements
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local LocationLabel = Instance.new("TextLabel")
local ErrorLog = Instance.new("TextLabel")
local UIListLayout = Instance.new("UIListLayout")

-- UI Properties
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = "IntruderUI"

MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true

Title.Parent = MainFrame
Title.Text = "The Intruder - Mall (By BMF)"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18

LocationLabel.Parent = MainFrame
LocationLabel.Text = "Location: Loading..."
LocationLabel.Size = UDim2.new(1, 0, 0, 30)
LocationLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
LocationLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
LocationLabel.Font = Enum.Font.SourceSans
LocationLabel.TextSize = 16

ErrorLog.Parent = MainFrame
ErrorLog.Text = "Error Log: None"
ErrorLog.Size = UDim2.new(1, 0, 0, 30)
ErrorLog.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ErrorLog.TextColor3 = Color3.fromRGB(255, 85, 85)
ErrorLog.Font = Enum.Font.SourceSans
ErrorLog.TextSize = 14
ErrorLog.TextWrapped = true
ErrorLog.TextYAlignment = Enum.TextYAlignment.Top

UIListLayout.Parent = MainFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Toggle UI with Delete key
UIS.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.Delete then
        MainFrame.Visible = not MainFrame.Visible
    end
end)

-- Function to Create Buttons
local function createButton(name, callback)
    local Button = Instance.new("TextButton")
    Button.Parent = MainFrame
    Button.Text = name
    Button.Size = UDim2.new(1, 0, 0, 30)
    Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Font = Enum.Font.SourceSans
    Button.TextSize = 16
    Button.MouseButton1Click:Connect(function()
        pcall(callback)
    end)
    return Button
end

-- Intruder Hallway Warning Notification (NEW)
local function notifyWarning()
    StarterGui:SetCore("SendNotification", {
        Title = "WARNING",
        Text = "The Intruder is coming your way! Turn off the lights, and hide in the closet!",
        Duration = 5
    })
end

-- Track Intruder Location
spawn(function()
    while true do
        local success, result = pcall(function()
            return workspace.Values.intruderPos.Value
        end)
        if success then
            LocationLabel.Text = "Location: " .. tostring(result)

            -- Trigger hallway warning if detected
            if tostring(result):lower():find("hallway2") then
                notifyWarning()
            end
        else
            LocationLabel.Text = "Location: Error"
            ErrorLog.Text = "Error Log: Failed to fetch intruder location."
        end
        wait(1)
    end
end)

-- Buttons with Functions

createButton("The Intruder - House (Script by BMF)", function()
    print("The Intruder - House script executed!")
    loadstring(game:HttpGet('https://raw.githubusercontent.com/mattswagyt/The-Intruder-House-Script/refs/heads/main/Script'))()
end)

createButton("Other Intruder Script", function()
    print("Other script triggered")
    loadstring(game:HttpGet("https://pastebin.com/raw/FGjjwm6W"))()
end)

createButton("Infinite Yield", function()
    local success, result = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end)
    if success then
        print("Infinite Yield executed!")
    else
        print("Error executing Infinite Yield")
    end
end)

createButton("Dark Dex", function()
    local success, result = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
    end)
    if success then
        print("Dark Dex executed!")
    else
        print("Error executing Dark Dex")
    end
end)

createButton("Win Game", function()
    local success, result = pcall(function()
        local values = workspace:FindFirstChild("Values")
        if values then
            local winGame = values:FindFirstChild("winGame")
            if winGame then
                winGame.Value = true
                print("Game won.")
            else
                print("Error: winGame value not found.")
            end
        else
            print("Error: workspace.Values not found.")
        end
    end)
    if not success then
        warn("Win Game button error:", result)
    end
end)

-- Full Bright Function (NEW)
createButton("Full Bright", function()
    -- Set all lighting properties to max visibility
    Lighting.Brightness = 5
    Lighting.ClockTime = 14
    Lighting.FogEnd = 100000
    Lighting.GlobalShadows = false
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    print("Full Bright activated!")
end)

-- God Mode

createButton("God Mode", function()

-- Destroy these paths to enable God Mode

            local replicatedStorage = game:GetService("ReplicatedStorage")
            local pathsToDestroy = {
                "activateDeath", 
                "Die", 
                "playerDeath"
            }
            for _, path in ipairs(pathsToDestroy) do
                local obj = replicatedStorage:FindFirstChild(path)
                if obj then
                    obj:Destroy()
                    print(path .. " destroyed.")
                else
                    print("Error: " .. path .. " not found.")
                end
            end
        end)

createButton("Intruder Ignores You", function()
    print("Activating 'Intruder Ignores You'...")

    -- Disable intruder death execution
    local deathGui = PlayerGui:FindFirstChild("Death")
    if deathGui then
        local canExecute = deathGui:FindFirstChild("canExecute")
        if canExecute and canExecute:IsA("BoolValue") then
            canExecute.Value = false
            print("Intruder will now ignore you.")
        else
            warn("Error: canExecute BoolValue not found in Death GUI.")
        end
    else
        warn("Error: Death GUI not found in PlayerGui.")
    end

    -- Destroy ShameTeleport if it exists in workspace
    local shameTeleport = workspace:FindFirstChild("ShameTeleport")
    if shameTeleport then
        shameTeleport:Destroy()
        print("ShameTeleport destroyed!")
    end

    -- Destroy BoxOfShame if it exists
    local boxOfShame = workspace:FindFirstChild("BoxOfShame")
    if boxOfShame then
        boxOfShame:Destroy()
        print("BoxOfShame destroyed!")
    end

    -- Destroy FindPlayer paths to ensure the intruder ignores the player
    local events = workspace:FindFirstChild("Events")
    if events then
        local findPlayerPaths = { "FindPlayer", "FindPlayer2", "FindPlayer3" }
        for _, pathName in ipairs(findPlayerPaths) do
            local obj = events:FindFirstChild(pathName)
            if obj and obj:FindFirstChild("TouchInterest") then
                obj.TouchInterest:Destroy()
                print(pathName .. " TouchInterest destroyed.")
            end
        end
    else
        warn("Error: workspace.Events not found.")
    end
end)

createButton("Break Anxiety", function()
    local anxietyEvent = workspace.Events:FindFirstChild("Anxiety")
    if anxietyEvent then
        spawn(function()
            while true do
                anxietyEvent.Value = -696969696969
                wait(0.1)
            end
        end)
        print("Anxiety has been broken!")
    else
        print("Anxiety Event not found!")
    end
end)

createButton("Break Awareness", function()
    spawn(function()
        -- Destroy the awareness GUI in StarterGui
        local starterGuiAwareness = game:GetService("StarterGui"):FindFirstChild("IntruderAwareness")
        if starterGuiAwareness then
            starterGuiAwareness:Destroy()
            print("StarterGui IntruderAwareness removed.")
        end

        -- Continuously monitor and destroy the awareness GUI in the PlayerGui
        while true do
            local playerGuiAwareness = game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
            if playerGuiAwareness then
                local awareness = playerGuiAwareness:FindFirstChild("IntruderAwareness")
                if awareness then
                    awareness:Destroy()
                    print("PlayerGui IntruderAwareness removed.")
                end
            end
            wait(0.1) -- Check periodically to ensure it stays removed
        end
    end)
    print("Awareness system hidden!")
end)

createButton("Break Entity", function()
     -- Function to disable The Intruder mechanic
    print("Entity mechanic disabled.")

    -- Destroying specified paths
    local map = workspace:FindFirstChild("Map")
    if map then
        if map:FindFirstChild("Intruder") then
            map.Intruder:Destroy()
            print("Destroyed: workspace.Map.Intruder")
        else
            print("Error: workspace.Map.Intruder not found.")
        end

        if map:FindFirstChild("Intruder2") then
            map.Intruder2:Destroy()
            print("Destroyed: workspace.Map.Intruder2")
        else
            print("Error: workspace.Map.Intruder2 not found.")
        end
    else
        print("Error: workspace.Map not found.")
    end

    local events = workspace:FindFirstChild("Events")
    if events then
        if events:FindFirstChild("IntruderWaitValue") then
            events.IntruderWaitValue:Destroy()
            print("Destroyed: workspace.Events.IntruderWaitValue")
        else
            print("Error: workspace.Events.IntruderWaitValue not found.")
        end
    else
        print("Error: workspace.Events not found.")
    end

    local values = workspace:FindFirstChild("Values")
    if values then
        if values:FindFirstChild("intruderPos") then
            values.intruderPos:Destroy()
            print("Destroyed: workspace.Values.intruderPos")
        else
            print("Error: workspace.Values.intruderPos not found.")
        end

        if values:FindFirstChild("isIntruderInRoom") then
            values.isIntruderInRoom:Destroy()
            print("Destroyed: workspace.Values.isIntruderInRoom")
        else
            print("Error: workspace.Values.isIntruderInRoom not found.")
        end
    else
        print("Error: workspace.Values not found.")
    end
end)

createButton("Break Time", function()
-- Lock TimeValue to -9223372036854776000
    local values = workspace:FindFirstChild("Values")
    if values then
        local timeValue = values:FindFirstChild("TimeValue")
        if timeValue then
            task.spawn(function()
                while true do
                    if timeValue.Value ~= -9223372036854776000 then
                        timeValue.Value = -9223372036854776000
                    end
                    wait() -- Short delay to prevent excessive processing
                end
            end)
            print("Time mechanic disabled. TimeValue locked to -9223372036854776000.")
        else
            print("Error: TimeValue not found.")
        end
    else
        print("Error: workspace.Values not found.")
    end

    -- Destroying game:GetService("ReplicatedStorage").timer
    local replicatedStorage = game:GetService("ReplicatedStorage")
    if replicatedStorage:FindFirstChild("timer") then
        replicatedStorage.timer:Destroy()
        print("Destroyed: ReplicatedStorage.timer")
    else
        print("Error: ReplicatedStorage.timer not found.")
    end
end)

createButton("Break Alarm", function()
 -- Function to disable the alarm mechanic
    print("Alarm mechanic disabled.")
    
    -- Destroying paths in workspace.Values
    local values = workspace:FindFirstChild("Values")
    if values then
        if values:FindFirstChild("alarmOn") then
            values.alarmOn:Destroy()
            print("Destroyed: workspace.Values.alarmOn")
        else
            print("Error: workspace.Values.alarmOn not found.")
        end

        if values:FindFirstChild("alarmsLeft") then
            values.alarmsLeft:Destroy()
            print("Destroyed: workspace.Values.alarmsLeft")
        else
            print("Error: workspace.Values.alarmsLeft not found.")
        end
    else
        print("Error: workspace.Values not found.")
    end

    -- Destroying workspace.Deactivators
    if workspace:FindFirstChild("Deactivators") then
        workspace.Deactivators:Destroy()
        print("Destroyed: workspace.Deactivators")
    else
        print("Error: workspace.Deactivators not found.")
    end

    -- Destroying both Alarm models in workspace.Map
    local map = workspace:FindFirstChild("Map")
    if map then
        local alarmsDestroyed = 0
        for _, child in pairs(map:GetChildren()) do
            if child.Name == "Alarm" then
                child:Destroy()
                alarmsDestroyed += 1
                print("Destroyed: workspace.Map.Alarm")
            end
        end
        if alarmsDestroyed == 0 then
            print("Error: No Alarm models found in workspace.Map.")
        else
            print("Total Alarm models destroyed in workspace.Map:", alarmsDestroyed)
        end
    else
        print("Error: workspace.Map not found.")
    end

    -- Destroying every sound named "Alarm" in workspace.Sounds
    local sounds = workspace:FindFirstChild("Sounds")
    if sounds then
        local soundsDestroyed = 0
        for _, sound in pairs(sounds:GetChildren()) do
            if sound.Name == "Alarm" then
                sound:Destroy()
                soundsDestroyed += 1
                print("Destroyed: workspace.Sounds.Alarm")
            end
        end
        if soundsDestroyed == 0 then
            print("Error: No Alarm sounds found in workspace.Sounds.")
        else
            print("Total Alarm sounds destroyed in workspace.Sounds:", soundsDestroyed)
        end
    else
        print("Error: workspace.Sounds not found.")
    end
end)

createButton("Make Nightmare Mode", function()
-- Check for workspace.Values
    local values = workspace:FindFirstChild("Values")
    if values then
        -- Set Easy Mode to false
        if values:FindFirstChild("isEasyMode") then
            local isEasyMode = values.isEasyMode
            if isEasyMode:IsA("BoolValue") then
                isEasyMode.Value = false
                print("Easy Mode set to false.")
            else
                print("Error: workspace.Values.isEasyMode is not a BoolValue.")
            end
        else
            print("Error: workspace.Values.isEasyMode not found.")
        end

        -- Set Nightmare Mode to true
        if values:FindFirstChild("isNightmareMode") then
            local isNightmareMode = values.isNightmareMode
            if isNightmareMode:IsA("BoolValue") then
                isNightmareMode.Value = true
                print("Nightmare Mode set to true.")
            else
                print("Error: workspace.Values.isNightmareMode is not a BoolValue.")
            end
        else
            print("Error: workspace.Values.isNightmareMode not found.")
        end
    else
        print("Error: workspace.Values not found.")
    end
end)

createButton("Bypass Power Outage", function()
-- Function to bypass the power outage mechanic
    print("Power outage mechanic bypassed.")

    -- Locking workspace.Events.isPowerDown to false
    local events = workspace:FindFirstChild("Events")
    if events then
        if events:FindFirstChild("isPowerDown") then
            local isPowerDown = events.isPowerDown
            if isPowerDown:IsA("BoolValue") then
                isPowerDown.Value = false
                print("Locked: workspace.Events.isPowerDown set to false")
                
                -- Ensure it stays locked to false
                isPowerDown.Changed:Connect(function()
                    isPowerDown.Value = false
                    print("Locked: workspace.Events.isPowerDown reset to false")
                end)
            else
                print("Error: workspace.Events.isPowerDown is not a BoolValue.")
            end
        else
            print("Error: workspace.Events.isPowerDown not found.")
        end
    else
        print("Error: workspace.Events not found.")
    end

    -- Locking workspace.Values.Power to 100
    local values = workspace:FindFirstChild("Values")
    if values then
        if values:FindFirstChild("Power") then
            local power = values.Power
            if power:IsA("NumberValue") then
                power.Value = 100
                print("Locked: workspace.Values.Power set to 100")
                
                -- Ensure it stays locked to 100
                power.Changed:Connect(function()
                    power.Value = 100
                    print("Locked: workspace.Values.Power reset to 100")
                end)
            else
                print("Error: workspace.Values.Power is not a NumberValue.")
            end
        else
            print("Error: workspace.Values.Power not found.")
        end

        -- Destroying workspace.Values.PowerWait
        if values:FindFirstChild("PowerWait") then
            values.PowerWait:Destroy()
            print("Destroyed: workspace.Values.PowerWait")
        else
            print("Error: workspace.Values.PowerWait not found.")
        end
    else
        print("Error: workspace.Values not found.")
    end

    -- Destroying other map stuff
    local map = workspace:FindFirstChild("Map")
    if map then
        if map:FindFirstChild("Breaker") then
            map.Breaker:Destroy()
            print("Destroyed: workspace.Map.Breaker")
        else
            print("Error: workspace.Map.Breaker not found.")
        end

        if map:FindFirstChild("FuseBox") then
            map.FuseBox:Destroy()
            print("Destroyed: workspace.Map.FuseBox")
        else
            print("Error: workspace.Map.FuseBox not found.")
        end
    else
        print("Error: workspace.Map not found.")
    end

    -- Destroying CutPower in ReplicatedStorage
    local replicatedStorage = game:GetService("ReplicatedStorage")
    if replicatedStorage:FindFirstChild("CutPower") then
        replicatedStorage.CutPower:Destroy()
        print("Destroyed: ReplicatedStorage.CutPower")
    else
        print("Error: ReplicatedStorage.CutPower not found.")
    end

    -- Destroying workspace.Sounds.PowerDown
    if workspace:FindFirstChild("Sounds") then
        if workspace.Sounds:FindFirstChild("PowerDown") then
            workspace.Sounds.PowerDown:Destroy()
            print("Destroyed: workspace.Sounds.PowerDown")
        else
            print("Error: workspace.Sounds.PowerDown not found.")
        end
    else
        print("Error: workspace.Sounds not found.")
    end
end)

createButton("Become The Intruder (WIP)", function()
print("You have become the intruder (WIP).")
        end)

createButton("Delete Phone", function()
-- Destroys the Phone in the Map
    local map = workspace:FindFirstChild("Map")
    if map then
        local phone = map:FindFirstChild("Phone")
        if phone then
            phone:Destroy()
            print("Destroyed: workspace.Map.Phone")
        else
            print("Error: workspace.Map.Phone not found.")
        end
    else
        print("Error: workspace.Map not found.")
    end
end)

createButton("Delete Tutorial", function()
-- Destroys the Book (tutorial) in workspace
    local book = workspace:FindFirstChild("Book")
    if book then
        book:Destroy()
        print("Destroyed: workspace.Book")
    else
        print("Error: workspace.Book not found.")
    end
end)

createButton("Delete Lights", function()
-- Destroys the LightSwitch in Map
    local map = workspace:FindFirstChild("Map")
    if map then
        local lightSwitch = map:FindFirstChild("LightSwitch")
        if lightSwitch then
            lightSwitch:Destroy()
            print("Destroyed: workspace.Map.LightSwitch")
        else
            print("Error: workspace.Map.LightSwitch not found.")
        end
    else
        print("Error: workspace.Map not found.")
    end
end)

createButton("Delete Cameras", function()
-- Destroys the TurnOnCamera in Map
    local map = workspace:FindFirstChild("Map")
    if map then
        local turnOnCamera = map:FindFirstChild("TurnOnCamera")
        if turnOnCamera then
            turnOnCamera:Destroy()
            print("Destroyed: workspace.Map.TurnOnCamera")
        else
            print("Error: workspace.Map.TurnOnCamera not found.")
        end
    else
        print("Error: workspace.Map not found.")
    end
end)

createButton("Delete Lockers", function()
 -- Check if workspace.Lockers exists
    local lockers = workspace:FindFirstChild("Lockers")
    if lockers then
        lockers:Destroy()
        print("Destroyed: workspace.Lockers")
    else
        print("Error: workspace.Lockers not found.")
    end
end)



